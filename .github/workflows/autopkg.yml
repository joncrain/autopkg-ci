name: AutoPkg run

on:
  workflow_dispatch: # manually triggered
    inputs:
      recipe:
        description: Recipe to Run (optional)
        required: false

jobs:
  AutoPkg:
    runs-on: macos-latest
    timeout-minutes: 10 # Keeps your builds from running too long
    env:
      MUNKI_VERSION: "6.2.1"
      MUNKI_EXPLICIT_VERSION: "6.2.1.4545"
      AUTOPKG_VERSION: "2.7.2"
    steps:
    - name: Checkout AutoPkg recipes (this repo)
      uses: actions/checkout@v3

    - name: Cache Munki
      uses: john-shaffer/cache@d4e5f5ecb5773a5c1ce60d764950bbd161baa303
      id: munki-code-cache
      with:
        path: /usr/local/munki
        key: ${{ runner.os }}-munki-code-${{ env.MUNKI_EXPLICIT_VERSION }}

    - name: Cache Autopkg
      uses: john-shaffer/cache@d4e5f5ecb5773a5c1ce60d764950bbd161baa303
      id: autopkg-code-cache
      with:
        path: /Library/AutoPkg
        key: ${{ runner.os }}-autopkg-code-${{ env.AUTOPKG_VERSION }}

    - name: Cache Autopkg
      uses: actions/cache@v3
      id: autopkg-repo-cache
      with:
        path: ~/Library/AutoPkg
        key: ${{ runner.os }}-autopkg-repo-${{ env.AUTOPKG_VERSION }}

    - name: Fix Autopkg
      if: steps.autopkg-code-cache.outputs.cache-hit == 'true'
      run: |
        /bin/ln -s /Library/AutoPkg/autopkg /usr/local/bin/autopkg
        /bin/mkdir -p /usr/local/autopkg
        /bin/ln -s /Library/AutoPkg/Python3/Python.framework/Versions/Current/bin/python3 /usr/local/autopkg/python

    # - name: Cache Autopkg Repos
    #   uses: actions/cache@v3
    #   id: autopkg-repo-cache
    #   with:
    #     path: ~/Library/AutoPkg
    #     key: ${{ runner.os }}-autopkg-code-${{ env.AUTOPKG_VERSION }}

    - name: Install Munki # needed for some processors
      if: steps.munki-code-cache.outputs.cache-hit != 'true'
      run: |
        curl -L https://github.com/munki/munki/releases/download/v${{ env.MUNKI_VERSION }}/munkitools-${{ env.MUNKI_EXPLICIT_VERSION }}.pkg --output /tmp/munkitools.pkg
        sudo installer -pkg /tmp/munkitools.pkg -target /

    - name: Install AutoPkg
      if: steps.autopkg-code-cache.outputs.cache-hit != 'true'
      run: |
        curl -L https://github.com/autopkg/autopkg/releases/download/v${{ env.AUTOPKG_VERSION }}/autopkg-${{ env.AUTOPKG_VERSION }}.pkg --output /tmp/autopkg.pkg
        sudo installer -pkg /tmp/autopkg.pkg -target /

    - name: Checkout your Munki LFS repo
      uses: actions/checkout@v3
      with:
        repository: joncrain/munki_repo
        token: ${{ secrets.MUNKI_GITHUB_TOKEN }}
        fetch-depth: 1
        ref: refs/heads/main
        path: munki_repo

    - name: Configure AutoPkg and Git
      run: |
        defaults write com.github.autopkg RECIPE_OVERRIDE_DIRS "$(pwd)"/overrides/
        defaults write com.github.autopkg RECIPE_REPO_DIR "$(pwd)"/repos/
        defaults write com.github.autopkg FAIL_RECIPES_WITHOUT_TRUST_INFO -bool YES
        defaults write com.github.autopkg MUNKI_REPO "$GITHUB_WORKSPACE"/munki_repo
        defaults write com.github.autopkg GITHUB_TOKEN "${{ secrets.MUNKI_GITHUB_TOKEN }}"
        git config --global user.name "runner"
        git config --global user.email "runner@githubactions.local"

    - name: Add AutoPkg repos
      run: |
        for repo in $(cat repo_list.txt); do autopkg repo-add "$repo" && autopkg repo-update "$repo"; done

    - name: Run makecatalogs
      run: |
        /usr/local/munki/makecatalogs munki_repo

    - name: Run AutoPkg
      run: |
        pip3 install requests
        python3 autopkg_tools.py -l recipe_list.json
        if [ -f pull_request_title ]; then
        echo "TITLE=$(cat pull_request_title)" >> $GITHUB_ENV
        echo "BODY<<EOF" >> $GITHUB_ENV
        cat pull_request_body >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        fi
      env:
        RECIPE: ${{ github.event.inputs.recipe }}
        SLACK_WEBHOOK_TOKEN: ${{ secrets.autopkg_slack_token }}

    - name: Create Trust Info pull request
      if: env.TITLE
      run: |
        export BRANCH_NAME=trust-info-`date +'%Y-%m-%d'`
        git checkout -b $BRANCH_NAME
        git add overrides/
        git commit -m "${{ env.TITLE }}"
        git push --set-upstream origin $BRANCH_NAME
        jq -n --arg title "${{ env.TITLE }}" \
              --arg body "$BODY" \
              --arg head "$BRANCH_NAME" \
           '{title: $title, body: $body, head: $head, "base": "${{ github.ref }}"}' | curl -s --request POST \
           --url https://api.github.com/repos/${{ github.repository }}/pulls \
           --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
           --header 'content-type: application/json' \
           -d@-
