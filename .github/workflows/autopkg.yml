name: AutoPkg run

on:
  workflow_dispatch: # manually triggered
    inputs:
      recipe:
        description: Recipe to Run (optional)
        required: false

jobs:
  AutoPkg:
    runs-on: macos-latest
    timeout-minutes: 150 # Keeps your builds from running too long
    steps:
    - name: Checkout AutoPkg recipes (this repo)
      uses: actions/checkout@v3

    - name: Download Munki
      if: steps.munki-pkg-cache.outputs.cache-hit != 'true'
      run: |
        curl -L https://github.com/munki/munki/releases/download/v${{ vars.MUNKI_VERSION }}/munkitools-${{ vars.MUNKI_EXPLICIT_VERSION }}.pkg --output ${{ github.workspace }}/munkitools.pkg

    - name: Download AutoPkg
      if: steps.autopkg-pkg-cache.outputs.cache-hit != 'true'
      run: |
        curl -L https://github.com/autopkg/autopkg/releases/download/v${{ vars.AUTOPKG_VERSION }}/autopkg-${{ vars.AUTOPKG_VERSION }}.pkg --output ${{ github.workspace }}/autopkg.pkg

    - name: Install Munki and AutoPkg
      run: |
        sudo installer -pkg ${{ github.workspace }}/munkitools.pkg -target /
        sudo installer -pkg ${{ github.workspace }}/autopkg.pkg -target /

    - name: Checkout your Munki LFS repo
      uses: actions/checkout@v3
      with:
        repository: joncrain/munki_repo
        token: ${{ secrets.MUNKI_GITHUB_TOKEN }}
        fetch-depth: 1
        ref: refs/heads/main
        path: munki_repo

    - name: Configure AutoPkg
      if: steps.download-artifact.outputs.found_artifact != 'true'
      run: |
        defaults write com.github.autopkg RECIPE_OVERRIDE_DIRS "$GITHUB_WORKSPACE"/overrides/
        defaults write com.github.autopkg RECIPE_REPO_DIR "$GITHUB_WORKSPACE"/repos/
        defaults write com.github.autopkg FAIL_RECIPES_WITHOUT_TRUST_INFO -bool YES
        defaults write com.github.autopkg MUNKI_REPO "$GITHUB_WORKSPACE"/munki_repo
        defaults write com.github.autopkg GITHUB_TOKEN "${{ secrets.MUNKI_GITHUB_TOKEN }}"
        git config --global user.name "runner"
        git config --global user.email "runner@githubactions.local"

    - name: Configure AutoPkg Repos
      if: steps.download-artifact.outputs.found_artifact != 'true'
      run: |
        for repo in $(cat repo_list.txt); do autopkg repo-add "$repo"; done

    - name: Update AutoPkg Repos
      if: steps.download-artifact.outputs.found_artifact == 'true'
      run: autopkg repo-update all

    - name: Run makecatalogs
      run: /usr/local/munki/makecatalogs munki_repo -s

    - name: Run AutoPkg
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
        pip3 install -r requirements.txt
        python3 autopkg_tools.py -l recipe_list.json
        if [ -f pull_request_title ]; then
        echo "TITLE=$(cat pull_request_title)" >> $GITHUB_ENV
        echo "BODY<<EOF" >> $GITHUB_ENV
        cat pull_request_body >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        fi
      env:
        RECIPE: ${{ github.event.inputs.recipe }}
        SLACK_WEBHOOK_TOKEN: ${{ secrets.autopkg_slack_token }}
